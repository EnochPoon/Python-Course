{"version":3,"sources":["CodeBlock.js","actions/index.js","constants/index.js","LessonView.js","SideBar.js","HomeView.js","ContributeView.js","TodoView.js","App.js","HeaderBar.js","serviceWorker.js","reducers/index.js","index.js"],"names":["CodeBlock","this","props","language","value","style","cb","PureComponent","defaultProps","setCurPage","payload","type","LESSON_TITLES","FUTURE_LESSONS","doubleDigit","num","String","length","LessonView","state","md","id","className","classNames","loading","CircularProgress","disableShrink","margin","source","escapeHtml","renderers","code","mdPath","lessonNum","fetch","mode","then","response","text","data","setState","mdWrapper","document","getElementById","headers","querySelectorAll","ids","header","textContent","toLowerCase","replace","anchors","anchor","URL","href","origin","window","location","target","importantNotes","selfStudies","catch","e","parseInt","Component","connect","curPage","to","List","component","map","title","index","ListItem","button","selected","key","HomeView","React","ContributeView","TodoView","start","App","Array","keys","exact","path","Boolean","hostname","match","initialState","store","createStore","action","Object","assign","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","basename","process","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1e53db73.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { cb } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: 'python'\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language} style={cb} >\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;","export const SET_CUR_PAGE = 'SET_CUR_PAGE';\r\n\r\nexport function setCurPage(payload) {\r\n    return {\r\n        type: SET_CUR_PAGE,\r\n        payload\r\n    }\r\n}\r\n","export const LESSON_TITLES = [\r\n    \"Introduction and Setup\",\r\n    \"Variables and Output\",\r\n    \"Input\",\r\n    \"Conditional Statements\",\r\n    \"Functions\",\r\n    \"Loops\"\r\n];\r\n\r\nexport const FUTURE_LESSONS = [\r\n    \"Strings\",\r\n    \"Lists\",\r\n    \"Sets and Dictionaries\",\r\n    \"Classes and Objects\"\r\n]\r\n\r\n\r\nexport function doubleDigit(num) {\r\n    num = String(num);\r\n    while(num.length < 2) num = \"0\" + num;\r\n    return num;\r\n}","import React, { useState, useEffect, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport CodeBlock from './CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport { setCurPage } from './actions';\r\nimport { doubleDigit } from './constants';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\n\r\nclass LessonView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            md: \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { md } = this.state;\r\n        return (\r\n            <main id=\"md-wrapper\" className={classNames({ loading: md === \"\"})}>\r\n                {md === \"\" && <CircularProgress disableShrink style={{margin: 'auto'}} />}\r\n                <ReactMarkdown source={md} escapeHtml={false} renderers={{ code: CodeBlock }} />\r\n            </main>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        const mdPath = `./lesson${doubleDigit(this.props.lessonNum)}.md`;\r\n        fetch(mdPath, { mode: 'no-cors' })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            this.setState({ md: data }, () => {\r\n                // Set the header id's\r\n                const mdWrapper = document.getElementById('md-wrapper');\r\n                const headers = mdWrapper.querySelectorAll('h1, h2, h3, h4, h5, h6');\r\n                const ids = {};\r\n                for(const header of headers) {\r\n                    const text = header.textContent.toLowerCase();\r\n                    const id = text.replace(/\\s+/g, '-').replace(/[^a-z0-9\\-_]+/gi, \"\");\r\n                    if (id in ids) {\r\n                        header.id = `${id}-${ids[id]++}`;\r\n                    } else {\r\n                        ids[id] = 1;\r\n                        header.id = id;\r\n                    }\r\n                }\r\n\r\n                // set up anchors to target=_blank\r\n                const anchors = mdWrapper.querySelectorAll('a');\r\n                for (const anchor of anchors) {\r\n                    const url = new URL(anchor.href);\r\n                    if (url.origin !== window.location.origin) {\r\n                        anchor.target = \"_blank\"\r\n                    }\r\n                }\r\n\r\n                // Set up appropriate text content for special text\r\n                const importantNotes = mdWrapper.querySelectorAll('.important-note');\r\n                for (const node of importantNotes) {\r\n                    node.textContent = \"Important Note:\";\r\n                }\r\n                const selfStudies = mdWrapper.querySelectorAll('.self-study');\r\n                for (const node of selfStudies) {\r\n                    node.textContent = \"Self-Study:\"\r\n                }\r\n            });\r\n        }).catch(e => {\r\n            this.setState({ md: \"# ERROR! Invalid Lesson\" });\r\n        });\r\n\r\n        this.props.setCurPage(parseInt(this.props.lessonNum));\r\n    }\r\n}\r\n\r\nexport default connect(null, { setCurPage })(LessonView);\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setCurPage } from './actions'\r\nimport { doubleDigit, LESSON_TITLES } from './constants';\r\nimport {\r\n    List, ListItem\r\n} from \"@material-ui/core\";\r\nfunction SideBar(props) {\r\n    const { curPage } = props;\r\n    return (\r\n        <aside className=\"sidebar\">\r\n            <Link to=\"/\" className=\"sidebar-header\">\r\n                <h1>Python-Course</h1>\r\n                <div>By Enoch Poon</div>\r\n            </Link>\r\n                <div className=\"sidebar-content\">\r\n                    <List component=\"nav\" className=\"sidebar-list\">\r\n                        <h2>Published Lessons</h2>\r\n                        { LESSON_TITLES.map((title, index) => \r\n                            <ListItem\r\n                            button\r\n                            selected={index === curPage}\r\n                            className=\"sidebar-list-item\"\r\n                            key={index + title}\r\n                            >\r\n                                <Link\r\n                                to={`/lessons/${doubleDigit(index)}`}\r\n                                key={title}\r\n                                replace\r\n                                >\r\n                                    {`${index}: ${title}`}\r\n                                </Link>\r\n                            </ListItem>\r\n                            \r\n                        )}\r\n                    </List>\r\n                    \r\n                    <List component=\"nav\" className=\"sidebar-list\">\r\n                        <h2>Other Links</h2>\r\n                        <ListItem\r\n                        button\r\n                        selected={curPage === \"contribute\"}\r\n                        className=\"sidebar-list-item\"\r\n                        >\r\n                            <Link to={\"/contribute\"}>Contribute</Link>\r\n                        </ListItem>\r\n                        <ListItem\r\n                        button\r\n                        selected={curPage === \"todo\"}\r\n                        className=\"sidebar-list-item\"\r\n                        >\r\n                            <Link to=\"/todo\">Future Updates</Link>\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n        </aside>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        curPage: state.curPage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurPage })(SideBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCurPage } from './actions';\r\n\r\nclass HomeView extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setCurPage(-1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"home-view\">\r\n                <h1>Introductory Programming in Python</h1>\r\n                <p>By Enoch Poon</p>\r\n\r\n                <p>Hello! This is my own website that includes introductory programming lessons in Python. This course is designed for students who are completely new to programming.</p>\r\n\r\n                <h3><b>Start by selecting one of the published lessons on the sidebar!</b></h3>\r\n                \r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    curPage: state.curPage\r\n}), { setCurPage })(HomeView);\r\n","import React, { Component } from 'react';\r\nimport { setCurPage } from './actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContributeView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setCurPage(\"contribute\");\r\n    }\r\n    render() {\r\n        return (\r\n            <main className=\"contribute\">\r\n                <h1>Contribute</h1>\r\n    \r\n                <p>At the moment, I (Enoch Poon) am the sole developer and content creator of this entire website. However, that doesn't mean that you too can help me out!</p>\r\n                \r\n                <h2>Small Contributions</h2>\r\n                <p>If you notice things like bugs, spelling errors, or simply tiny suggestions to improve my site, please let me know, and I will consider them!</p>\r\n    \r\n                <h2>More Committed People</h2>\r\n                <p>Do you think you have the power and the skills to help me drastically improve this site? If you are interested, contact me for any of these positions (If you don't know how to contact me, then don't even try bc that means I don't know you)! I don't need like a resume or what not (since I'm not super formal); as long as I know you, and you can show me your skills by your projects or whatever, that's all I need.</p>\r\n                \r\n                <article>\r\n                    <h3>Nerdy Software Developer</h3>\r\n                    I can consider either front-end, back-end, or full-stack developers!\r\n                    <ul>\r\n                        <li><b>Front-End Developer:</b> Requires some good skills in React</li>\r\n                        <li><b>Back-End Developer:</b> idk I'm not really a back-end guy. You must be really creative in thinking of how we could possibly use back-end to this site. And I hope you got the skills to do it.</li>\r\n                        <li><b>Full-Stack Developer:</b> Basically all of the above. That's how full-stack developers work, right?</li>\r\n                    </ul>\r\n                </article>\r\n                <article>\r\n                    <h3>Awesome Designer</h3>\r\n                    <p>Ok if you think you have a good idea on how to make my site look a lot more beautiful, you can let me know! However, I am very picky, and I am known to call people out for bad designs. The easiest way for me to impress me is to show me a design first about how I can make this look better. If I trust you, I can allow you to keep helping me.</p>\r\n                </article>\r\n                \r\n                <article>\r\n                    <h3>Amazing Content Writer</h3>\r\n                    <p>Wanna actually write the lessons? You just gotta prove to me that you're actually really good at it. To make such proof, show me some notes or something of your own of a particular subject (preferably math or computer science). (This time, I am <b>extremely</b> picky, and I absolutely love calling many people out for poor teaching or lesson-writing skills). You also (obviously) have to be familiar with basic Python 3.</p>\r\n                </article>\r\n                \r\n            </main>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default connect(null, { setCurPage })(ContributeView);","import React, { Component } from 'react';\r\nimport { setCurPage } from './actions';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { LESSON_TITLES, FUTURE_LESSONS } from './constants';\r\n\r\nclass TodoView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setCurPage(\"todo\");\r\n    }\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Future Updates</h1>\r\n\r\n                <p>Here I list out my list of features that I plan to add to this site in the future. They are ordered approximately by highest priority first:</p>\r\n\r\n                <p><b>Want to actually help me get these features done! Please consider <Link to=\"/contribute\">contributing to this site!</Link></b></p>\r\n\r\n                <h2>Upcoming Lessons (subject to change)</h2>\r\n                <ol start={LESSON_TITLES.length}>\r\n                    {FUTURE_LESSONS.map(title => <li key={title}>{title}</li>)}\r\n                </ol>\r\n\r\n                <h2>Other Features Under Consideration</h2>\r\n                <ol>\r\n                    <li>Hands-on Projects</li>\r\n                    <li>Online Judging</li>\r\n                    <li>User Accounts</li>\r\n                </ol>\r\n                \r\n            </main>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default connect(null, { setCurPage })(TodoView);","import React, { Component } from 'react';\nimport './App.scss';\nimport MarkdownView from \"./LessonView\";\nimport { setCurPage } from './actions'\nimport { LESSON_TITLES, doubleDigit } from './constants';\nimport {\n  Switch,\n  Route,\n  BrowserRouter,\n  useLocation,\n  useParams\n} from \"react-router-dom\";\nimport SideBar from './SideBar';\nimport { connect } from 'react-redux';\nimport HomeView from './HomeView';\nimport ContributeView from './ContributeView';\nimport TodoView from './TodoView';\nimport HeaderBar from './HeaderBar';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <HeaderBar /> */}\n        <SideBar />\n        <div className=\"right-container\">\n          <Switch>\n            {\n              [...Array(LESSON_TITLES.length).keys()].map(num => (\n                <Route exact path={`/lessons/${doubleDigit(num)}`} key={num}>\n                  <MarkdownView lessonNum={num} />\n                </Route>\n              ))\n            }\n            {/* <Route exact path=\"/lessons/:lessonNum\">\n              <MarkdownView />\n            </Route> */}\n            <Route exact path=\"/contribute\">\n              <ContributeView />\n            </Route>\n            <Route exact path=\"/todo\">\n              <TodoView />\n            </Route>\n            <Route exact path=\"/\">\n              <HomeView />\n            </Route>\n            <Route path=\"/\">\n              <main>\n                <h1>ERROR: bad URL</h1>\n              </main>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  curPage: state.curPage\n}), { setCurPage })(App);\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeaderBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      someKey: 'someValue'\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <header>\r\n            <Link to=\"/\" className=\"home-link\">\r\n                <div className=\"title\">\r\n                    Python-Course\r\n                </div>\r\n                <div className=\"subtitle\">\r\n                    By Enoch Poon\r\n                </div>\r\n            </Link>\r\n            \r\n        </header>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      someKey: 'otherValue'\r\n    });\r\n  }\r\n}\r\n\r\nexport default HeaderBar;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_CUR_PAGE } from \"../actions\";\r\n\r\nconst initialState = {\r\n    curPage: -1\r\n};\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n    state = Object.assign({}, state);\r\n    switch(action.type) {\r\n        case SET_CUR_PAGE:\r\n            state.curPage = action.payload;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducers'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n      \n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}