{"version":3,"sources":["CodeBlock.js","actions/index.js","MarkdownView.js","constants/index.js","SideBar.js","HomeView.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["CodeBlock","this","props","language","value","style","darcula","PureComponent","defaultProps","setCurLessonNum","payload","type","MarkdownView","state","md","className","id","source","escapeHtml","renderers","code","fetch","path","mode","then","response","text","data","console","log","setState","mdWrapper","document","getElementById","headers","querySelectorAll","ids","header","textContent","toLowerCase","replace","anchors","anchor","URL","href","origin","window","location","target","catch","e","String","lessonNum","Component","connect","LESSON_TITLES","FUTURE_LESSONS","doubleDigit","num","length","SideBar","handleLessonNavClick","curLesson","to","disabled","HomeView","start","map","title","index","React","App","curLessonNum","pathname","parseInt","split","Array","keys","key","exact","Boolean","hostname","match","initialState","store","createStore","action","ReactDOM","render","StrictMode","basename","process","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.034fb97a.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: 'python'\r\n  };\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <SyntaxHighlighter language={language} style={darcula}>\r\n        {value}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;","export const SET_CUR_LESSON_NUM = 'SET_CUR_LESSON_NUM';\r\n\r\nexport function setCurLessonNum(payload) {\r\n    return {\r\n        type: SET_CUR_LESSON_NUM,\r\n        payload\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport CodeBlock from './CodeBlock';\r\nimport { connect } from 'react-redux';\r\nimport { setCurLessonNum } from './actions';\r\n\r\nclass MarkdownView extends Component {\r\n    static propTypes = {\r\n        path: PropTypes.string.isRequired,\r\n        lessonNum: PropTypes.number.isRequired\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            md: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"md-wrapper\" id=\"md-wrapper\">\r\n                <ReactMarkdown source={this.state.md} escapeHtml={false} renderers={{ code: CodeBlock }} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.path, { mode: 'no-cors' })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({ md: data }, () => {\r\n                // Set the header id's\r\n                const mdWrapper = document.getElementById('md-wrapper');\r\n                const headers = mdWrapper.querySelectorAll('h1, h2, h3, h4, h5, h6');\r\n                const ids = {};\r\n                for(const header of headers) {\r\n                    const text = header.textContent.toLowerCase();\r\n                    const id = text.replace(/\\s+/g, '-').replace(/[^a-z0-9\\-_]+/gi, \"\");\r\n                    if (id in ids) {\r\n                        header.id = `${id}-${ids[id]++}`;\r\n                    } else {\r\n                        ids[id] = 1;\r\n                        header.id = id;\r\n                    }\r\n                }\r\n\r\n                // set up anchors to target=_blank\r\n                const anchors = mdWrapper.querySelectorAll('a');\r\n                for (const anchor of anchors) {\r\n                    const url = new URL(anchor.href);\r\n                    if (url.origin !== window.location.origin) {\r\n                        anchor.target = \"_blank\"\r\n                    }\r\n                }\r\n            });\r\n        }).catch(e => {\r\n            this.setState({ md: String(e) });\r\n        });\r\n\r\n        this.props.setCurLessonNum(this.props.lessonNum);        \r\n    }\r\n}\r\n\r\nexport default connect(null, { setCurLessonNum })(MarkdownView);\r\n","export const LESSON_TITLES = [\r\n    \"Introduction and Setup\",\r\n    \"Variables and Output\",\r\n    \"Input\",\r\n    \"Conditional Statements\"\r\n];\r\n\r\nexport const FUTURE_LESSONS = [\r\n    \"Functions\",\r\n    \"Loops\",\r\n    \"Strings\",\r\n    \"Lists\",\r\n    \"Sets and Dictionaries\",\r\n    \"Classes and Objects\"\r\n]\r\n\r\n\r\nexport function doubleDigit(num) {\r\n    num = String(num);\r\n    while(num.length < 2) num = \"0\" + num;\r\n    return num;\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setCurLessonNum } from './actions'\r\nimport cx from 'classnames';\r\nimport { doubleDigit, LESSON_TITLES } from './constants';\r\n\r\nclass SideBar extends Component {\r\n\r\n    handleLessonNavClick = (lessonNum) => {\r\n        this.props.setCurLessonNum(lessonNum)\r\n    }\r\n\r\n    render() {\r\n        const { curLesson } = this.props;\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <Link to=\"/\"><h1>Python-Course</h1></Link>\r\n                <p>By Enoch Poon</p>\r\n                {curLesson >= 0 && <div className=\"adjacent-links\">\r\n                    <button className=\"adjacent-link-button\" disabled={curLesson <= 0}>\r\n                        {curLesson > 0 ? (\r\n                            <Link to={`/${doubleDigit(curLesson - 1)}`}><div><b>Previous Lesson:</b></div>{LESSON_TITLES[curLesson - 1]}</Link>\r\n                        ) : \"\"}\r\n                    </button>\r\n                    <button className=\"adjacent-link-button\" disabled={curLesson < 0 || curLesson >= LESSON_TITLES.length - 1}>\r\n                        {curLesson >= 0 && curLesson < LESSON_TITLES.length - 1 ? (\r\n                            <Link to={`/${doubleDigit(curLesson + 1)}`}><div><b>Next Lesson:</b></div>{LESSON_TITLES[curLesson + 1]}</Link>\r\n                        ) : \"\"}\r\n                    </button>\r\n                    \r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        curLesson: state.curLesson\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurLessonNum })(SideBar);\r\n","import React from 'react';\r\nimport { LESSON_TITLES, FUTURE_LESSONS, doubleDigit } from './constants';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setCurLessonNum } from './actions';\r\n\r\nclass HomeView extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.setCurLessonNum(-1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"md-wrapper\">\r\n                <h1>Introductory Programming in Python</h1>\r\n                <p>By Enoch Poon</p>\r\n\r\n                <p>Hello! This is my own website that includes introductory programming lessons in Python. This course is designed for students who are completely new to programming.</p>\r\n\r\n                <p><u>Future updates to this site will include more lessons, modifications to older lesson content, and major changes to the user interface.</u></p>\r\n\r\n                <h2>Table of Contents</h2>\r\n                <ol start=\"0\">\r\n                    {LESSON_TITLES.map((title, index) => (\r\n                        <li><Link to={`/${doubleDigit(index)}`}>{title}</Link></li>\r\n                    ))}\r\n                </ol>\r\n\r\n                <h2>Future Lessons (May be subject to change)</h2>\r\n                <ol start={LESSON_TITLES.length}>\r\n                    {FUTURE_LESSONS.map((title) => <li>{title}</li>)}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    curLesson: state.curLesson\r\n}), { setCurLessonNum })(HomeView);\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from \"./CodeBlock\";\nimport MarkdownView from \"./MarkdownView\";\nimport { setCurLessonNum } from './actions'\nimport { LESSON_TITLES, doubleDigit } from './constants';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport SideBar from './SideBar';\nimport { connect } from 'react-redux';\nimport HomeView from './HomeView';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      md: \"\",\n      curLessonNum: -1\n    }\n  }\n\n  componentDidMount() {\n    const path = window.location.pathname;\n    if (path === \"/\") this.props.setCurLessonNum(-1);\n    else this.props.setCurLessonNum(parseInt(path.split(\"/\")[1]));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SideBar />\n        <div className=\"right-container\">\n          <div className=\"nav-header\"></div>\n          <Switch>\n            {\n              [...Array(LESSON_TITLES.length).keys()].map(num => (\n                <Route path={`/${doubleDigit(num)}`} key={num}>\n                  <MarkdownView path={`./lessons/lesson${doubleDigit(num)}.md`} lessonNum={parseInt(num)} />\n                </Route>\n              ))\n            }\n            <Route exact path=\"/\">\n              <HomeView />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default connect(state => ({\n  curLesson: state.curLesson\n}), { setCurLessonNum })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_CUR_LESSON_NUM } from \"../actions\";\r\n\r\nconst initialState = {\r\n    curLesson: 1\r\n};\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_CUR_LESSON_NUM:\r\n            return {\r\n                ...state,\r\n                curLesson: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducers'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n      \n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}